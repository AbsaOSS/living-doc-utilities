#
# Copyright 2025 ABSA Group Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Release - Build & Publish

on:
  workflow_dispatch:
    inputs:
      tag-name:
        description: 'New release tag (e.g., v0.1.1).'
        required: true
      from-tag-name:
        description: 'Previous tag to compare against for changelog (optional)'
        required: false

jobs:
  release-build-publish:
    name: Release Build & Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Check tag format
        id: check-version-tag
        uses: AbsaOSS/version-tag-check@v0.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github-repository: ${{ github.repository }}
          version-tag: ${{ github.event.inputs.tag-name }}

      - name: Check previous tag (if provided)
        if: ${{ github.event.inputs.from-tag-name }}
        id: check-version-from-tag
        uses: AbsaOSS/version-tag-check@v0.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github-repository: ${{ github.repository }}
          version-tag: ${{ github.event.inputs.from-tag-name }}
          should-exist: true

      - name: Generate Release Notes
        id: generate_release_notes
        uses: AbsaOSS/generate-release-notes@v0.7.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag-name: ${{ github.event.inputs.tag-name }}
          chapters: |
            - { title: No entry üö´, label: duplicate }
            - { title: No entry üö´, label: no RN }
            - { title: Breaking Changes üí•, label: breaking-change }
            - { title: New Features üéâ, label: enhancement }
            - { title: New Features üéâ, label: feature }
            - { title: Bugfixes üõ†, label: bug }
            - { title: Infrastructure ‚öôÔ∏è, label: infrastructure }
            - { title: Silent-live ü§´, label: silent-live }
            - { title: Documentation üìú, label: documentation }

          coderabbit-support-active: 'true'
          coderabbit-release-notes-title: 'Summary by CodeRabbit'
          coderabbit-summary-ignore-groups: 'Documentation, Tests, Chores, Bug Fixes, Refactor'

          skip-release-notes-labels: 'no RN'
          verbose: true
          print-empty-chapters: true

      - name: Create Git Tag
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.event.inputs['tag-name'];
            const ref = `refs/tags/${tag}`;
            const sha = context.sha;
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: ref,
              sha: sha
            });
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install build tools
        run: python -m pip install --upgrade build twine

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*

      - name: Create Draft GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ github.event.inputs.tag-name }}
          body: ${{ steps.generate_release_notes.outputs.release-notes }}
          tag_name: ${{ github.event.inputs.tag-name }}
          draft: true
          prerelease: false
