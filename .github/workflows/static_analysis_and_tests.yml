#
# Copyright 2025 ABSA Group Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: "Static analysis & tests"

on:
  push:
    branches: [ "master" ]
  pull_request:

jobs:
  analysis:
    runs-on: ubuntu-latest
    name: Pylint Analysis
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.5
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Analyze code with Pylint
        id: analyze-code
        run: |
          pylint_score=$(pylint $(git ls-files '*.py') | grep 'rated at' | awk '{print $7}' | cut -d'/' -f1)
          echo "PYLINT_SCORE=$pylint_score" >> $GITHUB_ENV

      - name: Check Pylint score
        run: |
          if (( $(echo "$PYLINT_SCORE < 9.5" | bc -l) )); then
            echo "Failure: Pylint score is below 9.5 (project score: $PYLINT_SCORE)."
            exit 1
          else
            echo "Success: Pylint score is above 9.5 (project score: $PYLINT_SCORE)."
          fi

  code-format-check:
    runs-on: ubuntu-latest
    name: Black Format Check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.5
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Check code format with Black
        id: check-format
        run: |
          black --check $(git ls-files '*.py')

  mypy-check:
    runs-on: ubuntu-latest
    name: Mypy Type Check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.5
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Check types with Mypy
        id: check-types
        run: |
          mypy .

  python-tests:
    runs-on: ubuntu-latest
    name: Python Tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Check code coverage with Pytest
        run: pytest --ignore=tests/integration --cov=. -v tests/ --cov-fail-under=80
